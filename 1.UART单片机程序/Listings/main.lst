C51 COMPILER V9.00   MAIN                                                                  02/19/2022 22:58:43 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objec
                    -ts\main.obj)

line level    source

   1          #include <reg52.h>
   2          #include <string.h>
   3          #include <ds1602.c>
   4          sbit P10 =P1^0;
   5          sbit P11 =P1^1;
   6          sbit P12 =P1^2;
   7          sbit P13 =P1^3;
   8          sbit P17 =P1^7;
   9          
  10          
  11          #define Uart_Buf_Max 50                          //接收缓冲区长度
  12          
  13          
  14          
  15          
  16          bit ReceiveOK = 0;                               //接收完成标志位
  17          bit on_off = 0;
  18          unsigned char    usart_data =0,main_mode = 0;
  19          //unsigned char code Head[] = {"MCU received: "};  //Head数组定义
  20          unsigned char data RX_Buffer[Uart_Buf_Max];      //接收缓冲区定义                 
  21          
  22          void ConfigUART(unsigned int baud);              //串行口配置函数
  23          void SendData(unsigned char ch);                 //字符发送函数
  24          void SendString(char *s);                        //字符串发送函数
  25          
  26          /* 主函数 */
  27          void main()
  28          {
  29   1          EA = 1;                                      //使能总中断
  30   1          ConfigUART(9600);                            //配置串行口工作模式及参数
  31   1              memset(RX_Buffer,0,Uart_Buf_Max);            //首次运行时清空接收缓冲区
  32   1              init_1602();
  33   1              LCD_clr1602();
  34   1      //      goto_xy(1,0);
  35   1      //      display_string("hello");
  36   1          while(1)
  37   1              {
  38   2                              goto_xy(1,0);   
  39   2                      display_string("Stc Car sys");
  40   2                               if(P17 == 1)
  41   2                               {
  42   3                                              on_off = 1;
  43   3                                                      goto_xy(2,9);
  44   3                                       display_string("ON "); 
  45   3                               }
  46   2                               else if(P17 == 0)
  47   2                               {
  48   3                                              on_off = 0;
  49   3                                                      goto_xy(2,9);
  50   3                                       display_string("OFF");
  51   3                               }
  52   2                              if(usart_data == 0x00)
  53   2                              {
  54   3                                      main_mode = 0;
C51 COMPILER V9.00   MAIN                                                                  02/19/2022 22:58:43 PAGE 2   

  55   3                                      P1 = 0x00; 
  56   3                                              goto_xy(2,0);
  57   3                                       display_string("stop  ");
  58   3                              }
  59   2                              if(usart_data == 0x01)
  60   2                              {
  61   3                                      main_mode = 1;
  62   3                                      P1 = 0x01;  
  63   3                                              goto_xy(2,0);
  64   3                                       display_string("left   ");  
  65   3                              }               
  66   2                              if(usart_data == 0x02)
  67   2                              {
  68   3                                      main_mode = 2;
  69   3                                      P1 = 0x05;    
  70   3                                              goto_xy(2,0);
  71   3                                       display_string("forward"); 
  72   3                              }       
  73   2                              if(usart_data == 0x03)
  74   2                              {
  75   3                                      main_mode = 3;
  76   3                                      P1 = 0x04;  
  77   3                                              goto_xy(2,0);
  78   3                                       display_string("right  ");   
  79   3                              }               
  80   2                              if(usart_data == 0x04)
  81   2                              {
  82   3                                      main_mode = 4;
  83   3                                      P1 = 0x0a;  
  84   3                                              goto_xy(2,0);
  85   3                                       display_string("back   ");   
  86   3                              }
  87   2                      while(ReceiveOK)                         //等待接收完成
  88   2                      {
  89   3                              ReceiveOK = 0;                       //清零接收完成标志位
  90   3      //                      SendString(Head);                    //发送Head部分
  91   3      //                      SendString(RX_Buffer);               //发送接收到的数据
  92   3                              memset(RX_Buffer,0,Uart_Buf_Max);    //发送结束后清空接收缓冲区
  93   3                      }
  94   2              }
  95   1      }
  96          /* 串口配置函数，baud-通信波特率 */
  97          void ConfigUART(unsigned int baud)
  98          {
  99   1      //      SCON  = 0x50;        //配置串口为模式1  
 100   1      //      TH2 = 0xFF;          
 101   1      //      TL2 = 0xDC;          //波特率:9600 晶振=11.0592MHz 
 102   1      //      RCAP2H = 0xFF;   
 103   1      //      RCAP2L = 0xDC;       //16位自动再装入值
 104   1      //      
 105   1      //      TCLK = 1;            //T2工作于发送波特率发生器方式
 106   1      //      RCLK = 1;            //T2工作于接收波特率发生器方式
 107   1      //      C_T2 = 0;            //T2定时器模式
 108   1      //      EXEN2 = 0;           //禁止T2外部信号触发
 109   1      //      CP_RL2 = 0;          //T2为16位自动装载方式
 110   1      //      
 111   1      //      ET2 = 0;             //禁止T2中断
 112   1      //      ES  = 1;             //使能串口中断
 113   1      //      TR2 = 1;             //定时器T2开启
 114   1          SCON  = 0x50;                                //配置串口为模式1
 115   1          TMOD &= 0x0F;                                //清零T1的控制位
 116   1          TMOD |= 0x20;                                //配置T1为模式2
C51 COMPILER V9.00   MAIN                                                                  02/19/2022 22:58:43 PAGE 3   

 117   1          TH1 = 256 - (11059200/12/32)/baud;           //计算T1重载值
 118   1          TL1 = TH1;                                   //初值等于重载值
 119   1          ET1 = 0;                                     //禁止T1中断
 120   1          ES  = 1;                                     //使能串口中断
 121   1          TR1 = 1;                                     //启动T1
 122   1      }
 123          /* UART中断服务函数 */
 124          void InterruptUART() interrupt 4
 125          {
 126   1              static unsigned char data RX_Count = 0;      //静态计数变量
 127   1          if(RI)                                       //接收到字节
 128   1          {
 129   2              RI = 0;                                  //清零接收中断标志位
 130   2                      usart_data = SBUF;            //接收字节存缓冲区
 131   2      //              RX_Buffer[RX_Count++]  = SBUF;            //接收字节存缓冲区
 132   2      //              if(RX_Count >= Uart_Buf_Max)             //判断溢出
 133   2      //              {
 134   2      //                      RX_Count = 0;                        //溢出后覆盖原数据
 135   2      //              }
 136   2                      if(SBUF == '\n')                         //判断帧结束
 137   2                      {
 138   3                              ReceiveOK = 1;                       //接收完成
 139   3                              RX_Count = 0;                        //清零计数
 140   3                      }
 141   2          }
 142   1          if(TI)                                       //字节发送完毕
 143   1          {
 144   2              TI = 0;                                  //清零发送中断标志位
 145   2          }
 146   1      }
 147          /* UART字符发送函数 */
 148          void SendData(unsigned char ch)
 149          {
 150   1          SBUF = ch;                                   //启动发送
 151   1              while(!TI);                                  //等待结束
 152   1      }
 153          /* UART字符串发送函数 */
 154          void SendString(char *s)
 155          {
 156   1          while(*s)                                    //循环发送
 157   1          {
 158   2              SendData(*s++);
 159   2          }
 160   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    541    ----
   CONSTANT SIZE    =     59    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     86       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
